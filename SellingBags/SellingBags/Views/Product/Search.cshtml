@model SellingBags.Models.ViewModel.ProductVM
@using SellingBags.Common

@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="all-title-box">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2>Shop</h2>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Shop</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- End All Title Box -->
<!-- Start Shop Page  -->
<div class="shop-box-inner">
    <div class="container">
        <div class="row">
            
            <div class="col-xl-12 col-lg-12 col-sm-12 col-xs-12 ">
                <div class="right-product-box">
                    <div class="product-item-filter row">
                        <div class="col-12 col-sm-8 text-center text-sm-left">
                            <div class="toolbar-sorter-right">
                                <span>Sort by </span>
                                <select id="basic" class="selectpicker show-tick form-control" data-placeholder="$ USD">
                                    <option data-display="Select">Nothing</option>
                                    <option value="1">Popularity</option>
                                    <option value="2">High Price → High Price</option>
                                    <option value="3">Low Price → High Price</option>
                                    <option value="4">Best Selling</option>
                                </select>
                            </div>
                            <p>Showing all 4 results</p>
                        </div>

                    </div>

                    <div class="row product-categorie-box">
                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane fade show active" id="grid-view">
                                <div class="row">
                                    @{
                                        var ID_Account = "";
                                        if (Session[Sessions.USER_SESSION] != null)
                                        {
                                            ID_Account = (Session[Sessions.USER_SESSION] as LoginAccount).ID_Account;
                                        }
                                        SellingBags.Models.DataContext.WishListContext context = new SellingBags.Models.DataContext.WishListContext();
                                        foreach (var item in Model.SearchProductsByName)
                                        {

                                            <div class="col-lg-3 col-md-6">
                                                <div class="products-single fix">
                                                    <div class="box-img-hover">
                                                        <div class="type-lb">
                                                            <p class="sale">Sale</p>
                                                        </div>
                                                        <img src="~/Assets/images/products/@item.ImageURL" class="img-fluid" alt="@item.Name">
                                                        <div class="mask-icon">
                                                            <ul>
                                                                <li><a href="@Url.Action("Detail", "Product", new {ID_Product = item.ID_Product.Trim()})" data-toggle="tooltip" data-placement="right" title="View"><i class="fas fa-eye"></i></a></li>
                                                                @if (context.IsWishListed(ID_Account, item.ID_Product))
                                                                {
                                                                    <li><a href="@Url.Action("RemoveToWishList", "Account", new {ID_Product = item.ID_Product.Trim().Trim()})" data-toggle="tooltip" data-placement="right" title="Xóa khỏi yêu thích"><i class=" fa fa-heart"></i></a></li>
                                                                }
                                                                else
                                                                {
                                                                    <li><a href="@Url.Action("AddToWishList", "Account", new {ID_Product = item.ID_Product.Trim().Trim()})" data-toggle="tooltip" data-placement="right" title="Thêm vào yêu thích"><i class="far fa-heart"></i></a></li>
                                                                }
                                                            </ul>
                                                            <a class="cart" id="@GenarateRandomID.Execute()" href="@Url.Action("Add","Cart")" data-id="@item.ID_Product" data-quantity="1">Thêm vào giỏ hàng</a>
                                                        </div>
                                                    </div>
                                                    <div class="why-text">
                                                        <a href="@Url.Action("Detail", "Product", new {ID_Product = item.ID_Product.Trim()})">
                                                            <h4 class="product-name">@item.Name</h4>
                                                            <h5>@Converts.convertVND(item.Price) <del>@Converts.convertVND(item.Price)</del> </h5>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>

                                        }
                                    }

                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Shop Page -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var addCartButtons = document.querySelectorAll('.cart');
        addCartButtons.forEach(function (addButton) {
            addButton.addEventListener('click', function (e) {
                e.preventDefault();
                var id_product = addButton.getAttribute('data-id');
                var quantity = addButton.getAttribute('data-quantity');

                var xhr = new XMLHttpRequest();

                xhr.open('POST', addButton.getAttribute('href'), true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        alert('Thêm thành công');
                        location.reload();
                    } else {
                        alert('Đã xảy ra lỗi khi gửi yêu cầu.');
                    }
                };
                xhr.onerror = function () {
                    alert('Đã xảy ra lỗi khi gửi yêu cầu.');
                };
                xhr.send('ID_Product=' + id_product + '&Quantity=' + quantity);
            });
        })
    });
</script>