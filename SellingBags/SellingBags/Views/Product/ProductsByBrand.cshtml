@model SellingBags.Models.ViewModel.ProductVM
@using SellingBags.Models.DataContext
@using SellingBags.Common
@{
    ViewBag.Title = "ProductsByBrand";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var productContext = new ProductContext();
}
<div class="container-fluid">
    <div class="all-title-box">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h2>@ViewBag.Brand.Name</h2>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Trang chủ</a></li>
                        <li class="breadcrumb-item active">Thương hiệu @ViewBag.Brand.Name</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End All Title Box -->
    <!-- Start Shop Page  -->
    <div class="shop-box-inner">
        <div id="sidefilter" class="sidefilter">
            <h3 class="text-center">Bộ lọc</h3>
            <div id="closefilter" class="close"><i class="fa fa-arrow-left"></i></div>
            <form id="filterForm">
                <div class="row">
                    <div class="col-12">
                        <div class="h5">Giá:</div>
                        <div class="ml-3">
                            <div class="custom-control custom-radio">
                                <input id="price1" name="Price" value="" type="radio" class="custom-control-input mt-4">
                                <label class="custom-control-label" for="price1">
                                    < 400.000
                                </label>
                            </div>
                            <div class="custom-control custom-radio">
                                <input id="price2" name="Price" value="" type="radio" class="custom-control-input mt-4">
                                <label class="custom-control-label" for="price2">
                                    400.000 - 600.000
                                </label>
                            </div>
                            <div class="custom-control custom-radio">
                                <input id="price3" name="Price" value="" type="radio" class="custom-control-input mt-4">
                                <label class="custom-control-label" for="price3">
                                    600.000 - 900.000
                                </label>
                            </div>
                            <div class="custom-control custom-radio">
                                <input id="price4" name="Price" value="" type="radio" class="custom-control-input mt-4">
                                <label class="custom-control-label" for="price4">
                                    > 900.000
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="h5">Màu sắc:</div>
                        <select id="colorFilter" name="Color" class="form-control">
                            <option value="">Tất cả</option>
                            <option value="red">Đỏ</option>
                            <option value="blue">Xanh</option>
                            <option value="green">Xanh lá</option>
                            <option value="yellow">Vàng</option>
                        </select>
                    </div>
                    <div class="col-12 buttonfilter">
                        <button type="button" id="applyFilter" class="btn hvr-hover text-white w-100">Hoàn tất</button>
                        <button type="button" id="clearFilter" class="btn btn-theme w-100 mt-2">Xóa bộ lọc</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="container">
            <div class="row">

                <div class="col-xl-12 col-lg-12 col-sm-12 col-xs-12 ">
                    <div class="right-product-box">

                        <div class="product-item-filter row">
                            <div class="col-6 text-center border-right">
                                <div id="filterBtn" class="btn bg-white w-100 "><i class="fa fa-filter"></i> Bộ lọc</div>
                            </div>
                            <div class="col-6 text-center">
                                <div class="sort-section">
                                    <div id="sortBtn" class="btn bg-white w-100"><i class="fa fa-sort-amount-asc"></i> Sắp xếp</div>
                                    <div id="sortOptions" class="sort-options w-75">
                                        <ul>
                                            <li><a href="#" class="active">Mặc định</a></li>
                                            <li><a href="#">Giá tăng dần</a></li>
                                            <li><a href="#">Giá giảm dần</a></li>
                                            <li><a href="#">Bán chạy</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row product-categorie-box">
                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane fade show active" id="grid-view">
                                    <div class="row">
                                        @{
                                            var ID_Account = "";
                                            if (Session[Sessions.USER_SESSION] != null)
                                            {
                                                ID_Account = (Session[Sessions.USER_SESSION] as LoginAccount).ID_Account;
                                            }
                                            SellingBags.Models.DataContext.WishListContext context = new SellingBags.Models.DataContext.WishListContext();
                                            foreach (var item in Model.ProductsByBrand)
                                            {
                                                var categoryName = productContext.GetCategoryName(item.ID_Product);
                                                <div class="col-lg-3 col-md-4 col-6">
                                                    <div class="products-single fix">
                                                        <div class="box-img-hover">
                                                            <div class="type-lb">
                                                                <p class="sale">@categoryName</p>
                                                            </div>
                                                            <img src="~/Assets/images/products/@item.ImageURL" class="img-fluid" alt="@item.Name">
                                                            <div class="mask-icon">
                                                                <ul>
                                                                    <li><a href="@Url.Action("Detail", "Product", new {ID_Product = item.ID_Product.Trim()})" data-toggle="tooltip" data-placement="right" title="View"><i class="fas fa-eye"></i></a></li>
                                                                    @if (context.IsWishListed(ID_Account, item.ID_Product))
                                                                    {
                                                                        <li><a href="@Url.Action("RemoveToWishList", "Account", new {ID_Product = item.ID_Product.Trim().Trim()})" data-toggle="tooltip" data-placement="right" title="Xóa khỏi yêu thích"><i class=" fa fa-heart"></i></a></li>
                                                                    }
                                                                    else
                                                                    {
                                                                        <li><a href="@Url.Action("AddToWishList", "Account", new {ID_Product = item.ID_Product.Trim().Trim()})" data-toggle="tooltip" data-placement="right" title="Thêm vào yêu thích"><i class="far fa-heart"></i></a></li>
                                                                    }
                                                                </ul>
                                                                <a class="cart" id="@GenarateRandomID.Execute()" href="@Url.Action("Add","Cart")" data-id="@item.ID_Product" data-quantity="1">Thêm vào giỏ hàng</a>
                                                            </div>
                                                        </div>
                                                        <div class="why-text">
                                                            <a href="@Url.Action("Detail", "Product", new {ID_Product = item.ID_Product.Trim()})">
                                                                <h4 class="product-name">@item.Name</h4>
                                                                <h5>@Converts.convertVND(item.Price) <del>@Converts.convertVND(item.Price)</del> </h5>
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>

                                            }
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var addCartButtons = document.querySelectorAll('.cart');
        addCartButtons.forEach(function (addButton) {
            addButton.addEventListener('click', function (e) {
                e.preventDefault();
                var id_product = addButton.getAttribute('data-id');
                var quantity = addButton.getAttribute('data-quantity');

                var xhr = new XMLHttpRequest();

                xhr.open('POST', addButton.getAttribute('href'), true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.onload = function () {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        alert('Thêm thành công');
                        location.reload();
                    } else {
                        alert('Đã xảy ra lỗi khi gửi yêu cầu.');
                    }
                };
                xhr.onerror = function () {
                    alert('Đã xảy ra lỗi khi gửi yêu cầu.');
                };
                xhr.send('ID_Product=' + id_product + '&Quantity=' + quantity);
            });
        })
    });
    document.addEventListener('DOMContentLoaded', function () {
        var filterBtn = document.getElementById('filterBtn');
        var sidefilter = document.getElementById('sidefilter');
        var closeBtn = document.getElementById('closefilter');
        var sortBtn = document.getElementById('sortBtn');
        var sortOptions = document.getElementById('sortOptions');
        filterBtn.addEventListener('click', function (e) {
            e.stopPropagation();
            sidefilter.classList.toggle('show');
            togglesidefilter(sidefilter);
        });

        closeBtn.addEventListener('click', function () {
            sidefilter.classList.remove('show');
            togglesidefilter(sidefilter);
        });

        document.body.addEventListener('click', function (e) {
            var target = e.target;
            if (!sidefilter.contains(target)) {
                sidefilter.classList.remove('show');
            }
            togglesidefilter(sidefilter);
        });

        sortBtn.addEventListener('click', function () {
            var isOpen = sortOptions.style.display === 'block';
            sortOptions.style.display = isOpen ? 'none' : 'block';
        });

        function togglesidefilter(sidefilter) {
            var isOpen = sidefilter.classList.contains('show');
            document.body.style.overflow = isOpen ? 'hidden' : 'auto';
        }
    });
</script>